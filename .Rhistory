new_data_ord <- new_data[match(vector_orden, new_data$Species),]
# Verifica que no haya NAs en el resultado
if (any(is.na(new_data_ord$Species))) {
stop("Algunos nombres de especies no coinciden entre el árbol y los datos. Verifica los nombres.")
}
# Filtra las columnas categóricas (excluye "Species")
categorical_columns <- setdiff(names(new_data_ord), "Species")
# Base de colores inicial: gris claro
edge_colors <- rep("gray70", nrow(ptero_cropped$edge))
# Iterar sobre cada columna categórica para asignar colores
for (column in categorical_columns) {
# Asegúrate de que la columna sea categórica
new_data_ord[[column]] <- as.factor(new_data_ord[[column]])
# Asigna colores a las categorías
unique_categories <- levels(new_data_ord[[column]])
col <- rainbow(length(unique_categories))  # Genera colores únicos
tip_colors <- col[as.numeric(new_data_ord[[column]])]
# Actualiza los colores de las ramas basándose en las hojas
for (i in seq_along(ptero_cropped$tip.label)) {
edge_index <- which(ptero_cropped$edge[, 2] == i)
if (length(edge_index) > 0) {  # Verifica que el índice exista
edge_colors[edge_index] <- tip_colors[i]  # Actualiza el color
}
}
}
# Grafica la filogenia con las ramas coloreadas
plot(
ptero_cropped,
edge.color = edge_colors,
tip.color = "black",  # Las etiquetas de las puntas permanecen negras
cex = 0.5,
label.offset = 0.005,
edge.width = 3,
main = "Filogenia con ramas pintadas por múltiples columnas"
)
# Leyenda combinada
legend(
"topleft",
legend = paste(categorical_columns, collapse = ", "),
col = rainbow(length(categorical_columns)),
pch = 22,
pt.bg = rainbow(length(categorical_columns)),
bty = "n",
cex = 0.7,
title = "Categorías combinadas"
)
# Directorio de trabajo
directorio <- "C:/Users/alcan/OneDrive/Documentos/ProyectoBio/PhyloMapper"
setwd(directorio)
# Librerías necesarias
library(ape)
library(phytools)
# Lee los datos
new_data <- read.csv("especies_y_caracteres_completo.csv")
ptero_cropped <- read.tree("pterosaurios_mapeo.tre")
# Ordena los datos según las etiquetas del árbol
vector_orden <- ptero_cropped$tip.label
new_data_ord <- new_data[match(vector_orden, new_data$Species),]
# Verifica que no haya NAs en el resultado
if (any(is.na(new_data_ord$Species))) {
stop("Algunos nombres de especies no coinciden entre el árbol y los datos. Verifica los nombres.")
}
# Filtra las columnas categóricas (excluye "Species")
categorical_columns <- setdiff(names(new_data_ord), "Species")
# Base de colores inicial: gris claro
edge_colors <- rep("gray70", nrow(ptero_cropped$edge))
# Iterar sobre cada columna categórica para asignar colores
for (column in categorical_columns) {
# Asegúrate de que la columna sea categórica
new_data_ord[[column]] <- as.factor(new_data_ord[[column]])
# Asignar colores específicos para los valores "-" y "?"
tip_colors <- rep("gray70", nrow(new_data_ord))  # Gris claro por defecto
for (i in seq_along(new_data_ord[[column]])) {
if (new_data_ord[[column]][i] == "-") {
tip_colors[i] <- "darkred"  # Rojo oscuro para "-"
} else if (new_data_ord[[column]][i] == "?") {
tip_colors[i] <- "lightgray"  # Gris claro para "?"
} else {
# Si es una categoría válida, asignar un color único
unique_categories <- levels(new_data_ord[[column]])
col <- rainbow(length(unique_categories))  # Genera colores únicos
tip_colors[i] <- col[as.numeric(new_data_ord[[column]])[i]]
}
}
# Actualiza los colores de las ramas basándose en las hojas
for (i in seq_along(ptero_cropped$tip.label)) {
edge_index <- which(ptero_cropped$edge[, 2] == i)
if (length(edge_index) > 0) {  # Verifica que el índice exista
edge_colors[edge_index] <- tip_colors[i]  # Actualiza el color
}
}
}
# Grafica la filogenia con las ramas coloreadas
plot(
ptero_cropped,
edge.color = edge_colors,
tip.color = "black",  # Las etiquetas de las puntas permanecen negras
cex = 0.5,
label.offset = 0.01,  # Aumenta la separación entre las etiquetas de las puntas
edge.width = 3,
main = "Filogenia con ramas pintadas por múltiples columnas"
)
# Leyenda combinada
legend(
"topleft",
legend = paste(categorical_columns, collapse = ", "),
col = rainbow(length(categorical_columns)),
pch = 22,
pt.bg = rainbow(length(categorical_columns)),
bty = "n",
cex = 0.7,
title = "Categorías combinadas"
)
# Directorio de trabajo
directorio <- "C:/Users/alcan/OneDrive/Documentos/ProyectoBio/PhyloMapper"
setwd(directorio)
# Librerías necesarias
library(ape)
library(phytools)
# Lee los datos
new_data <- read.csv("especies_y_caracteres_completo.csv")
ptero_cropped <- read.tree("pterosaurios_mapeo.tre")
# Ordena los datos según las etiquetas del árbol
vector_orden <- ptero_cropped$tip.label
new_data_ord <- new_data[match(vector_orden, new_data$Species),]
# Verifica que no haya NAs en el resultado
if (any(is.na(new_data_ord$Species))) {
stop("Algunos nombres de especies no coinciden entre el árbol y los datos. Verifica los nombres.")
}
# Filtra las columnas categóricas (excluye "Species")
categorical_columns <- setdiff(names(new_data_ord), "Species")
# Base de colores inicial: gris claro
edge_colors <- rep("gray70", nrow(ptero_cropped$edge))
# Iterar sobre cada columna categórica para asignar colores
for (column in categorical_columns) {
# Asegúrate de que la columna sea categórica
new_data_ord[[column]] <- as.factor(new_data_ord[[column]])
# Asignar colores específicos para los valores "-" y "?"
tip_colors <- rep("gray70", nrow(new_data_ord))  # Gris claro por defecto
for (i in seq_along(new_data_ord[[column]])) {
if (new_data_ord[[column]][i] == "-") {
tip_colors[i] <- "darkred"  # Rojo oscuro para "-"
} else if (new_data_ord[[column]][i] == "?") {
tip_colors[i] <- "lightgray"  # Gris claro para "?"
} else {
# Si es una categoría válida, asignar un color único
unique_categories <- levels(new_data_ord[[column]])
col <- rainbow(length(unique_categories))  # Genera colores únicos
tip_colors[i] <- col[as.numeric(new_data_ord[[column]])[i]]
}
}
# Actualiza los colores de las ramas basándose en las hojas
for (i in seq_along(ptero_cropped$tip.label)) {
edge_index <- which(ptero_cropped$edge[, 2] == i)
if (length(edge_index) > 0) {  # Verifica que el índice exista
edge_colors[edge_index] <- tip_colors[i]  # Actualiza el color
}
}
}
# Grafica la filogenia con las ramas coloreadas
plot(
ptero_cropped,
edge.color = edge_colors,
tip.color = "black",  # Las etiquetas de las puntas permanecen negras
cex = 0.5,
label.offset = 0.01,  # Aumenta la separación entre las etiquetas de las puntas
edge.width = 3,
main = "Filogenia con ramas pintadas por múltiples columnas"
)
# Leyenda combinada
legend(
"topleft",
legend = paste(categorical_columns, collapse = ", "),
col = rainbow(length(categorical_columns)),
pch = 22,
pt.bg = rainbow(length(categorical_columns)),
bty = "n",
cex = 0.7,
title = "Categorías combinadas"
)
# Directorio de trabajo
directorio <- "C:/Users/alcan/OneDrive/Documentos/ProyectoBio/PhyloMapper"
setwd(directorio)
# Librerías necesarias
library(ape)
library(phytools)
# Lee los datos
new_data <- read.csv("especies_y_caracteres_completo.csv")
ptero_cropped <- read.tree("pterosaurios_mapeo.tre")
# Ordena los datos según las etiquetas del árbol
vector_orden <- ptero_cropped$tip.label
new_data_ord <- new_data[match(vector_orden, new_data$Species),]
# Verifica que no haya NAs en el resultado
if (any(is.na(new_data_ord$Species))) {
stop("Algunos nombres de especies no coinciden entre el árbol y los datos. Verifica los nombres.")
}
# Filtra las columnas categóricas (excluye "Species")
categorical_columns <- setdiff(names(new_data_ord), "Species")
# Base de colores inicial: gris claro
edge_colors <- rep("gray70", nrow(ptero_cropped$edge))
# Iterar sobre cada columna categórica para asignar colores
for (column in categorical_columns) {
# Asegúrate de que la columna sea categórica
new_data_ord[[column]] <- as.factor(new_data_ord[[column]])
# Asignar colores específicos para los valores "-" y "?"
tip_colors <- rep("gray70", nrow(new_data_ord))  # Gris claro por defecto
for (i in seq_along(new_data_ord[[column]])) {
if (new_data_ord[[column]][i] == "-") {
tip_colors[i] <- "darkred"  # Rojo oscuro para "-"
} else if (new_data_ord[[column]][i] == "?") {
tip_colors[i] <- "lightgray"  # Gris claro para "?"
} else {
# Si es una categoría válida, asignar un color único
unique_categories <- levels(new_data_ord[[column]])
col <- rainbow(length(unique_categories))  # Genera colores únicos
tip_colors[i] <- col[as.numeric(new_data_ord[[column]])[i]]
}
}
# Actualiza los colores de las ramas basándose en las hojas
for (i in seq_along(ptero_cropped$tip.label)) {
edge_index <- which(ptero_cropped$edge[, 2] == i)
if (length(edge_index) > 0) {  # Verifica que el índice exista
edge_colors[edge_index] <- tip_colors[i]  # Actualiza el color
}
}
}
# Grafica la filogenia con las ramas coloreadas
plot(
ptero_cropped,
edge.color = edge_colors,
tip.color = "black",  # Las etiquetas de las puntas permanecen negras
cex = 0.5,
label.offset = 0.01,  # Aumenta la separación entre las etiquetas de las puntas
edge.width = 3,
main = "Filogenia con ramas pintadas por múltiples columnas"
)
# Leyenda combinada
legend(
"topleft",
legend = paste(categorical_columns, collapse = ", "),
col = rainbow(length(categorical_columns)),
pch = 22,
pt.bg = rainbow(length(categorical_columns)),
bty = "n",
cex = 0.7,
title = "Categorías combinadas"
)
# Directorio de trabajo
directorio <- "C:/Users/alcan/OneDrive/Documentos/ProyectoBio/PhyloMapper"
setwd(directorio)
# Librerías necesarias
library(ape)
library(phytools)
# Lee los datos
new_data <- read.csv("especies_y_caracteres_completo.csv")
ptero_cropped <- read.tree("pterosaurios_mapeo.tre")
# Ordena los datos según las etiquetas del árbol
vector_orden <- ptero_cropped$tip.label
new_data_ord <- new_data[match(vector_orden, new_data$Species),]
# Verifica que no haya NAs en el resultado
if (any(is.na(new_data_ord$Species))) {
stop("Algunos nombres de especies no coinciden entre el árbol y los datos. Verifica los nombres.")
}
# Filtra las columnas categóricas (excluye "Species")
categorical_columns <- setdiff(names(new_data_ord), "Species")
# Base de colores inicial: gris claro
edge_colors <- rep("gray70", nrow(ptero_cropped$edge))
# Iterar sobre cada columna categórica para asignar colores
for (column in categorical_columns) {
# Asegúrate de que la columna sea categórica
new_data_ord[[column]] <- as.factor(new_data_ord[[column]])
# Asignar colores específicos para los valores "-" y "?"
tip_colors <- rep("gray70", nrow(new_data_ord))  # Gris claro por defecto
for (i in seq_along(new_data_ord[[column]])) {
if (new_data_ord[[column]][i] == "-") {
tip_colors[i] <- "darkred"  # Rojo oscuro para "-"
} else if (new_data_ord[[column]][i] == "?") {
tip_colors[i] <- "lightgray"  # Gris claro para "?"
} else {
# Si es una categoría válida, asignar un color único
unique_categories <- levels(new_data_ord[[column]])
col <- rainbow(length(unique_categories))  # Genera colores únicos
tip_colors[i] <- col[as.numeric(new_data_ord[[column]])[i]]
}
}
# Actualiza los colores de las ramas basándose en las hojas
for (i in seq_along(ptero_cropped$tip.label)) {
edge_index <- which(ptero_cropped$edge[, 2] == i)
if (length(edge_index) > 0) {  # Verifica que el índice exista
edge_colors[edge_index] <- tip_colors[i]  # Actualiza el color
}
}
}
# Grafica la filogenia con las ramas coloreadas
plot(
ptero_cropped,
edge.color = edge_colors,
tip.color = "black",  # Las etiquetas de las puntas permanecen negras
cex = 0.5,
label.offset = 0.01,  # Aumenta la separación entre las etiquetas de las puntas
edge.width = 3,
main = "Filogenia con ramas pintadas por múltiples columnas"
)
# Leyenda combinada
legend(
"topleft",
legend = paste(categorical_columns, collapse = ", "),
col = rainbow(length(categorical_columns)),
pch = 22,
pt.bg = rainbow(length(categorical_columns)),
bty = "n",
cex = 0.7,
title = "Categorías combinadas"
)
# Directorio de trabajo
directorio <- "C:/Users/alcan/OneDrive/Documentos/ProyectoBio/PhyloMapper"
setwd(directorio)
# Librerías necesarias
library(ape)
library(phytools)
# Lee los datos
new_data <- read.csv("especies_y_caracteres_completo.csv")
ptero_cropped <- read.tree("pterosaurios_mapeo.tre")
# Ordena los datos según las etiquetas del árbol
vector_orden <- ptero_cropped$tip.label
new_data_ord <- new_data[match(vector_orden, new_data$Species),]
# Verifica que no haya NAs en el resultado
if (any(is.na(new_data_ord$Species))) {
stop("Algunos nombres de especies no coinciden entre el árbol y los datos. Verifica los nombres.")
}
# Filtra las columnas categóricas (excluye "Species")
categorical_columns <- setdiff(names(new_data_ord), "Species")
# Base de colores inicial: gris claro
edge_colors <- rep("gray70", nrow(ptero_cropped$edge))
# Iterar sobre cada columna categórica para asignar colores
for (column in categorical_columns) {
# Asegúrate de que la columna sea categórica
new_data_ord[[column]] <- as.factor(new_data_ord[[column]])
# Asignar colores específicos para los valores "-" y "?"
tip_colors <- rep("gray70", nrow(new_data_ord))  # Gris claro por defecto
for (i in seq_along(new_data_ord[[column]])) {
if (new_data_ord[[column]][i] == "-") {
tip_colors[i] <- "darkred"  # Rojo oscuro para "-"
} else if (new_data_ord[[column]][i] == "?") {
tip_colors[i] <- "lightgray"  # Gris claro para "?"
} else {
# Si es una categoría válida, asignar un color único
unique_categories <- levels(new_data_ord[[column]])
col <- rainbow(length(unique_categories))  # Genera colores únicos
tip_colors[i] <- col[as.numeric(new_data_ord[[column]])[i]]
}
}
# Actualiza los colores de las ramas basándose en las hojas
for (i in seq_along(ptero_cropped$tip.label)) {
edge_index <- which(ptero_cropped$edge[, 2] == i)
if (length(edge_index) > 0) {  # Verifica que el índice exista
edge_colors[edge_index] <- tip_colors[i]  # Actualiza el color
}
}
}
# Grafica la filogenia con las ramas coloreadas
plot(
ptero_cropped,
edge.color = edge_colors,
tip.color = "black",  # Las etiquetas de las puntas permanecen negras
cex = 0.5,
label.offset = 0.01,  # Aumenta la separación entre las etiquetas de las puntas
edge.width = 3,
main = "Filogenia con ramas pintadas por múltiples columnas"
)
# Leyenda combinada
legend(
"topleft",
legend = paste(categorical_columns, collapse = ", "),
col = rainbow(length(categorical_columns)),
pch = 22,
pt.bg = rainbow(length(categorical_columns)),
bty = "n",
cex = 0.7,
title = "Categorías combinadas"
)
# Directorio de trabajo
directorio <- "C:/Users/alcan/OneDrive/Documentos/ProyectoBio/PhyloMapper"
setwd(directorio)
# Librerías necesarias
library(ape)
library(phytools)
# Lee los datos
new_data <- read.csv("especies_y_caracteres_completo.csv")
ptero_cropped <- read.tree("pterosaurios_mapeo.tre")
# Ordena los datos según las etiquetas del árbol
vector_orden <- ptero_cropped$tip.label
new_data_ord <- new_data[match(vector_orden, new_data$Species),]
# Verifica que no haya NAs en el resultado
if (any(is.na(new_data_ord$Species))) {
stop("Algunos nombres de especies no coinciden entre el árbol y los datos. Verifica los nombres.")
}
# Filtra las columnas categóricas (excluye "Species")
categorical_columns <- setdiff(names(new_data_ord), "Species")
# Base de colores inicial: gris claro
edge_colors <- rep("gray70", nrow(ptero_cropped$edge))
# Iterar sobre cada columna categórica para asignar colores
for (column in categorical_columns) {
# Asegúrate de que la columna sea categórica
new_data_ord[[column]] <- as.factor(new_data_ord[[column]])
# Asignar colores específicos para los valores "-" y "?"
tip_colors <- rep("gray70", nrow(new_data_ord))  # Gris claro por defecto
for (i in seq_along(new_data_ord[[column]])) {
if (new_data_ord[[column]][i] == "-") {
tip_colors[i] <- "darkred"  # Rojo oscuro para "-"
} else if (new_data_ord[[column]][i] == "?") {
tip_colors[i] <- "lightgray"  # Gris claro para "?"
} else {
# Si es una categoría válida, asignar un color único
unique_categories <- levels(new_data_ord[[column]])
col <- rainbow(length(unique_categories))  # Genera colores únicos
tip_colors[i] <- col[as.numeric(new_data_ord[[column]])[i]]
}
}
# Actualiza los colores de las ramas basándose en las hojas
for (i in seq_along(ptero_cropped$tip.label)) {
edge_index <- which(ptero_cropped$edge[, 2] == i)
if (length(edge_index) > 0) {  # Verifica que el índice exista
edge_colors[edge_index] <- tip_colors[i]  # Actualiza el color
}
}
}
# Grafica la filogenia con las ramas coloreadas
plot(
ptero_cropped,
edge.color = edge_colors,
tip.color = "black",  # Las etiquetas de las puntas permanecen negras
cex = 0.5,
label.offset = 1,  # Aumenta la separación entre las etiquetas de las puntas
edge.width = 1,
main = "Filogenia con ramas pintadas por múltiples columnas"
)
# Leyenda combinada
legend(
"topleft",
legend = paste(categorical_columns, collapse = ", "),
col = rainbow(length(categorical_columns)),
pch = 22,
pt.bg = rainbow(length(categorical_columns)),
bty = "n",
cex = 0.7,
title = "Categorías combinadas"
)
directorio ="C:/Users/alcan/OneDrive/Documentos/ProyectoBio/PhyloMapper"
setwd(directorio)
#librerías necesarias
library(ape)
library(phytools)
#lee los datos para correr
new_data <- read.csv("especies_y_caracteres.csv")
ptero_cropped <- read.tree("pterosaurios_mapeo.tre")
head(new_data)
str(new_data)
vector_orden <- ptero_cropped$tip.label
new_data_ord <- new_data[match(vector_orden, new_data$Species),]
# Verifica que no haya NAs en el resultado
if (any(is.na(new_data_ord$Species))) {
stop("Algunos nombres de especies no coinciden entre el árbol y los datos. Verifica los nombres.")
}
# Verifica que el orden sea idéntico
identical(ptero_cropped$tip.label, new_data_ord$Species)
# Asegúrate de que la columna 'Paleoenvironment' sea categórica
new_data_ord$Paleoenvironment <- as.factor(new_data_ord$Paleoenvironment)
# Mapea los colores según las categorías
col <- c("dodgerblue4", "darkorange2")
tip_colors <- col[as.numeric(new_data_ord$Paleoenvironment)]
# Verifica el resultado
if (any(is.na(tip_colors))) {
stop("No se pudieron asignar colores. Verifica los valores en la columna 'Paleoenvironment'.")
}
str(tip_colors)
#grafica
plot(
ptero_cropped,
edge.width = 3,
label.offset = 0.05,
tip.color = tip_colors,
use.edge.length = FALSE,
cex = 0.5,
edge.color = tip_colors, no.margin= TRUE
)
nodelabels()
edgelabels()
length(ptero_cropped$edge)
#428
# Asigna colores a las hojas según su estado
# Colorea las ramas del árbol basándote en los estados terminales
edge_colors <- rep("gray70", nrow(ptero_cropped$edge))  # primero colorea a todo el árbol con un color que designes.
for (i in seq_along(ptero_cropped$tip.label)) {
edge_index <- which(ptero_cropped$edge[, 2] == i)  # Encuentra el índice del borde correspondiente
edge_colors[edge_index] <- tip_colors[i]  # Asigna el color del estado
}
foo <- function() {
col <- "red"
for (i in 1:2)
axis(i, col = col, col.ticks = col, col.axis = col, las = 1)
box(lty = "19")
}
plot(ptero_cropped,
edge.color = edge_colors,
tip.color = tip_colors,
cex = 0.5,
label.offset = 0.005,
edge.width = 2)
legend(x="bottomleft",levels(as.factor(new_data_ord$Paleoenvironment)),pch=22,
pt.bg=col,pt.cex=1.5, bty="n",cex=0.7, title = "Paleoenvironment")
foo()
